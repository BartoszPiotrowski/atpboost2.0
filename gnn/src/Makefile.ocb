FILES = cnf fof fof_parse fof_lexer features args dtree logic circuit fcop
FILES_CMX = $(addsuffix .cmx,$(FILES))
SOURCES = *.ml *.mll *.mly
LIB = -L`ocamlopt -where` -lunix -lcamlstr -lasmrun_pic -lm -ldl -L /usr/lib/python3.6/config-3.6m-x86_64-linux-gnu -L /net/software/local/python/3.6.0/lib/ -lpython3.6m

all: test fcoplib.so

fcoplib.so: cint.o _build/fcop.o
	gcc -shared -Wl,-soname,fcoplib -o fcoplib.so -fPIC cint.o _build/*.o $(LIB)

_build/fcop.o: $(SOURCES)
	ocamlbuild -no-hygiene -libs str,unix,nums fcop.o

.c.o:
	gcc -c -fPIC -I /usr/include/python3.6m -o $*.o $<

test: cint.o test.o _build/fcop.o 
	gcc -o test -fPIC cint.o test.o _build/*.o $(LIB)

clean:
	@ocamlbuild -clean
	@rm -f fcoplib.so *o *~ *cmi *cmx

%.cmx: %.ml
	ocamlopt -annot -inline 100 -c $<

%.ml: %.mly
	ocamlyacc $< # -v
	rm $(<:y=i)

%_lexer.ml: %_lexer.mll %_parse.ml
	ocamllex $<
